# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

# Enable support for MSVC_RUNTIME_LIBRARY
cmake_policy(SET CMP0091 NEW)
set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

# Variables
set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")

include("cmake/msvc-configurations.cmake")

project(libwindrv)

# Packages
find_package(WDK REQUIRED)

# Target: libwindrv
set(libwindrv_SOURCES
	"src/crt/libwindrv.crt.cpp"
	"src/libwindrv.cpp"
	"include/libwindrv/crt/libwindrv.crt.h"
	"include/libwindrv/libwindrv.h"
	cmake.toml
)

wdk_add_library(libwindrv)

target_sources(libwindrv PRIVATE ${libwindrv_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${libwindrv_SOURCES})

target_compile_features(libwindrv PUBLIC
	cxx_std_20
)

target_compile_options(libwindrv PUBLIC
	"/GL"
	"/W4"
)

target_include_directories(libwindrv PUBLIC
	include
)

# Target: testdrv1
if(ENABLE_TEST) # test_mode
	set(testdrv1_SOURCES
		"test/testdrv1/main.cpp"
		"test/testdrv1/main2.cpp"
		cmake.toml
	)

	wdk_add_driver(testdrv1)

	target_sources(testdrv1 PRIVATE ${testdrv1_SOURCES})
	source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${testdrv1_SOURCES})

	target_compile_features(testdrv1 PRIVATE
		cxx_std_20
	)

	target_compile_options(testdrv1 PRIVATE
		"/GL"
		"/W4"
	)

	target_include_directories(testdrv1 PRIVATE
		include
	)

	target_link_libraries(testdrv1 PRIVATE
		libwindrv
	)

	get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
	if(NOT CMKR_VS_STARTUP_PROJECT)
		set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT testdrv1)
	endif()

endif()
